# 워크플로우 이름
name: Unity CI/CD for Gwangju Run

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-deploy-android:
    name: Build & Deploy Android 🚀
    runs-on: ubuntu-latest

    steps:
    # 1. 소스 코드 가져오기 (Checkout)
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        lfs: true

    # 2. Git LFS 파일 다운로드 (LFS 사용 시)
    - name: Pull Git LFS files
      run: git lfs pull

    # 3. Setup Unity Editor (buildalon)
    - name: Setup Unity Editor (buildalon)
      uses: buildalon/unity-setup@v1.0.0 # 예시 버전, 최신 안정 버전 확인 필요
      with:
        unity-version: 6000.0.42f1

    # 4. Activate Unity License (buildalon)
    - name: Activate Unity License (buildalon)
      uses: buildalon/activate-unity-license@v1.0.6 # 보고서 언급 버전
      with:
        unity-username: ${{ secrets.UNITY_USERNAME }}
        unity-password: ${{ secrets.UNITY_PASSWORD }}
        # unity-serial: ${{ secrets.UNITY_SERIAL }} # Pro/Plus인 경우
        # TFA 지원 여부 확인 필요, 지원 시 관련 입력 추가

    # 5. Build Unity Project (buildalon)
    - name: Build Unity Project (Android - buildalon)
      uses: buildalon/unity-action@v1.0.0 # 예시 버전, 최신 안정 버전 확인 필요
      id: build-android
      with:
        project-path: . # Unity 프로젝트 경로 (루트이므로 .)
        target-platform: Android
        # 추가적인 빌드 옵션은 buildalon/unity-action 문서 참조

    # 6. AWS 자격 증명 설정
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      # ... (이전과 동일) ...

    # 7. 빌드 결과물 S3에 업로드
    - name: Upload Android Build to S3
      run: |
        # buildalon/unity-action의 outputs.artifactsPath를 확인해야 함
        # 아래는 game-ci/unity-builder 기준이므로, buildalon에 맞게 수정 필요
        # 예시: if [ -d "${{ steps.build-android.outputs.artifactsPath }}/Android" ]; then
        #         aws s3 cp "${{ steps.build-android.outputs.artifactsPath }}/Android/" ...
        #       else ... fi
        echo "S3 Upload step needs adjustment for buildalon output path"
        # 임시로 빌드 성공 여부만 확인하기 위해 아래 실제 업로드는 주석 처리
        # if [ -d "${{ steps.build-android.outputs.buildsPath }}/${{ env.UNITY_TARGET_PLATFORM }}" ]; then # 이 경로는 game-ci 기준
        #   aws s3 cp "${{ steps.build-android.outputs.buildsPath }}/${{ env.UNITY_TARGET_PLATFORM }}/" "s3://${{ secrets.S3_BUCKET_NAME }}/builds/android/$(date +%Y-%m-%d)-${{ github.sha }}/" --recursive --acl private
        #   echo "Build uploaded to s3://${{ secrets.S3_BUCKET_NAME }}/builds/android/$(date +%Y-%m-%d)-${{ github.sha }}/"
        # else
        #   echo "Build path not found, skipping S3 upload."
        #   exit 1
        # fi
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}

# ... (이하 Google Play 배포는 주석 처리된 상태로 유지) ...